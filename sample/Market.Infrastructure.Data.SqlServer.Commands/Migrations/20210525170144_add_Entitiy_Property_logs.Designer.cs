// <auto-generated />
using System;
using Market.Infrastructure.Data.SqlServer.Commands.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Market.Infrastructure.Data.SqlServer.Commands.Migrations
{
    [DbContext(typeof(MarketCommandDbContext))]
    [Migration("20210525170144_add_Entitiy_Property_logs")]
    partial class add_Entitiy_Property_logs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lipar.Infrastructure.Data.SqlServer.EntityChangeInterceptors.Entities.EntityChangeLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityId")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("EntityType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("UserId")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("EntityChangeLogs");
                });

            modelBuilder.Entity("Lipar.Infrastructure.Data.SqlServer.EntityChangeInterceptors.Entities.PropertyChangeLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EntityChangeLogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Key")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Value")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("EntityChangeLogId");

                    b.ToTable("PropertyChangeLogs");
                });

            modelBuilder.Entity("Market.Core.Domain.Products.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Barcode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .IsClustered(false);

                    b.HasIndex("CreatedDate")
                        .IsUnique()
                        .IsClustered();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Lipar.Infrastructure.Data.SqlServer.EntityChangeInterceptors.Entities.PropertyChangeLog", b =>
                {
                    b.HasOne("Lipar.Infrastructure.Data.SqlServer.EntityChangeInterceptors.Entities.EntityChangeLog", "EntityChangeLog")
                        .WithMany("PropertyChangeLogs")
                        .HasForeignKey("EntityChangeLogId");

                    b.Navigation("EntityChangeLog");
                });

            modelBuilder.Entity("Lipar.Infrastructure.Data.SqlServer.EntityChangeInterceptors.Entities.EntityChangeLog", b =>
                {
                    b.Navigation("PropertyChangeLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
